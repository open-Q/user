// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	storage "github.com/open-Q/user/storage"
)

// Storage is an autogenerated mock type for the Storage type
type Storage struct {
	mock.Mock
}

// Add provides a mock function with given fields: ctx, user
func (_m *Storage) Add(ctx context.Context, user storage.User) (*storage.User, error) {
	ret := _m.Called(ctx, user)

	var r0 *storage.User
	if rf, ok := ret.Get(0).(func(context.Context, storage.User) *storage.User); ok {
		r0 = rf(ctx, user)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*storage.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, storage.User) error); ok {
		r1 = rf(ctx, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Disconnect provides a mock function with given fields: ctx
func (_m *Storage) Disconnect(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
